//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace clojure.properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("clojure.lang.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ant sim ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
        ///;   Copyright (c) David Miller. All rights reserved.
        ///;   The use and distribution terms for this software are covered by the
        ///;   Common Public License 1.0 (http://opensource.org/licenses/cpl.php)
        ///;   which can be found in the file CPL.TXT at the root of this distribution.
        ///;   By using this software in any fashion, you are agreeing to be bound by
        ///;   the terms of this license.
        ///;   You must not remove this notice, or any other, from  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ants {
            get {
                return ResourceManager.GetString("ants", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;   Copyright (c) David Miller. All rights reserved.
        ///;   The use and distribution terms for this software are covered by the
        ///;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
        ///;   which can be found in the file epl-v10.html at the root of this distribution.
        ///;   By using this software in any fashion, you are agreeing to be bound by
        ///;   the terms of this license.
        ///;   You must not remove this notice, or any other, from this software.
        ///
        ///(in-ns &apos;clojure.core)
        ///
        ///(def unquote)
        ///
        ///(def [rest of string was truncated]&quot;;.
        /// </summary>
        public static string core {
            get {
                return ResourceManager.GetString("core", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;   Copyright (c) David Miller. All rights reserved.
        ///;   The use and distribution terms for this software are covered by the
        ///;   Common Public License 1.0 (http://opensource.org/licenses/cpl.php)
        ///;   which can be found in the file CPL.TXT at the root of this distribution.
        ///;   By using this software in any fashion, you are agreeing to be bound by
        ///;   the terms of this license.
        ///;   You must not remove this notice, or any other, from this software.
        ///
        ///(in-ns &apos;clojure.core)
        ///
        ///;;;;;;;;;;;;;;;;;;;;;;;;;;;;; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string core_print {
            get {
                return ResourceManager.GetString("core_print", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (defn f1 [l n] (if (&gt; (count l) n) nil (recur (cons &apos;a l) n)))
        ///(defn len [x]
        ///  (. x Length))
        ///(defn len2 [#^String x]
        ///  (. x Length))
        ///
        ///(defn test1 [] (time (f1 nil 100000)))
        ///(defn test2 [] (time (reduce + (map len (replicate 100000 &quot;asdf&quot;)))))
        ///(defn test3 [] (time (reduce + (map len2 (replicate 100000 &quot;asdf&quot;)))))
        ///.
        /// </summary>
        public static string test {
            get {
                return ResourceManager.GetString("test", resourceCulture);
            }
        }
    }
}
